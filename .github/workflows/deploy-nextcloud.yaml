name: Deploy Nextcloud AIO to Yandex Kubernetes

on:
  push:
    branches: [ main ]

env:
  YC_CLUSTER_NAME: "k8s-demo"
  YC_NETWORK_NAME: "default"
  YC_SUBNET_NAME: "default-ru-central1-a"
  YC_K8S_VERSION: "1.30"
  YC_NODE_COUNT: "2"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Установка YC CLI
    #source "/home/luchik/.bashrc"
    - name: Install YC CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -a 
        sudo apt-get install -y jq       
        echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH 

    # Аутентификация в Yandex Cloud
    - name: Configure YC CLI
      run: |
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
        echo '${{ secrets.YC_SA_KEY }}' | jq -r . > key.json  # Фикс здесь!
        yc config set service-account-key key.json
        rm -f key.json

    # Проверка Аутентификация в Yandex Cloud
    - name: Test YC CLI
      run: |
        yc config get folder-id > folder_id.txt  # Сохраняем в файл
        cat folder_id.txt  # Показываем содержимое

    # Создание Kubernetes-кластера
    - name: Create Yandex Managed Kubernetes Cluster
      run: |
        if ! yc managed-kubernetes cluster get --name k8s-demo >/dev/null 2>&1; then
          yc managed-kubernetes cluster create  \
            --name k8s-demo  \
            --network-name default  \
            --zone ru-central1-a  \
            --subnet-name default-ru-central1-a  \
            --public-ip  \
            --service-account-id ajevntj7oel39ap5pik9  \
            --node-service-account-id ajeb7flhr5qrgem66hcm
        else
          echo "Cluster 'k8s-demo' already exists, skipping creation"
        fi

    # Создание node-group для Kubernetes-кластера
    - name: Create Yandex Managed Kubernetes Cluster node-group
      run: |
        if ! yc managed-kubernetes node-group get --name k8s-demo-ng >/dev/null 2>&1; then
          yc managed-kubernetes node-group create \
            --name k8s-demo-ng \
            --cluster-name k8s-demo \
            --platform standard-v3 \
            --cores 2 \
            --memory 4 \
            --core-fraction 50 \
            --disk-type network-ssd \
            --fixed-size 2 \
            --network-interface subnets=default-ru-central1-a,ipv4-address=nat \
            --async
        else
          echo "Node group 'k8s-demo-ng' already exists, skipping creation"
        fi

    # Получение kubeconfig
    - name: Get Kubeconfig
      run: |
        yc managed-kubernetes cluster get-credentials ${{ env.YC_CLUSTER_NAME }} --external
        kubectl config view --raw > kubeconfig.yaml

    # Установка Helm
    - name: Install Helm
      uses: azure/setup-helm@v3

    # Установка CSI-драйвера
    - name: Deploy Yandex S3
      run: |
        helm repo add yandex-s3 https://yandex-cloud.github.io/k8s-csi-s3/charts
        helm upgrade --install yandex-s3 yandex-s3/csi-s3 \
          --namespace kube-system \
          --set secret.accessKey=${{ env.YC_S3_ACCESSKEY }} \
          --set secret.secretKey=${{ env.YC_S3_SECRETKEY }} \
          --set storageClass.singleBucket=nextcloud2
    # Установка Nextcloud AIO
    - name: Deploy Nextcloud AIO
      run: |
        helm repo add nextcloud-aio https://nextcloud.github.io/all-in-one/
        helm upgrade --install nextcloud-aio ./nextcloud-aio-helm-chart -f values.yaml

    # Получение внешнего IP (опционально)
    - name: Get Nextcloud External IP
      run: |
        kubectl get svc -n nextcloud